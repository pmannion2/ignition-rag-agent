[project]
name = "ignition-rag-agent"
version = "0.1.0"
description = "Retrieval-Augmented Generation (RAG) pipeline for Ignition codebase"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "YourName"},
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "black",
    "flake8",
    "isort",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: unit tests that mock external dependencies",
    "integration: integration tests that require external dependencies",
    "slow: tests that are slow to run",
]

[tool.ruff]
# Enable Pyflakes (`F`), pycodestyle (`E`), isort (`I`), and more
lint.select = ["E", "F", "I", "N", "W", "B", "A", "C4", "PT", "RUF", "SIM", "TCH", "UP"]
line-length = 100
target-version = "py38"
# Exclude common directories for generated files
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "chroma_index",
    ".pytest_cache",
]
# Allow autofix for all enabled rules (when `--fix` is used)
lint.fixable = ["ALL"]
# Allow unused variables when underscore-prefixed
lint.ignore = ["E501"]  # Line too long (handled by formatter)

# Configure isort rules for Ruff
lint.isort.known-first-party = ["api", "indexer", "logger", "watcher", "cursor_agent"]

# Configure formatter options
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
